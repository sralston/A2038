<%= stylesheet_link_tag "init_bidding" %>

<script language=javascript>
	var currentSelectCo = null;
	var cashHeld = <%= @player.cash_held %>;
	var bidIncrement = 5;
	var currentPlayer = <%= @player == @game.first_player ? "true" : "false" %>
	var playerNumber = <%= @player.id %>

<% buy_found = false %>
<% s = "var coStatus = [" %>
<% @companies.each do |co| %>

	<% if (co.status == "BOUGHT") %>
	 	<% s+= "'BOT'" %>
	<% elsif (!co.bids.empty?) %>
	 	<% s+= "'BID_" + co.bids.last.bid_amount.to_s + "'" %>
	<% elsif (!buy_found) %>
	 	<%  s+= "'BUY_" + co.starting_bid.to_s + "'" %>
		<% buy_found = true %>
	<% else %>
	 	<% s+= "'NOB_" + co.starting_bid.to_s + "'" %>
	<% end %>	
	<% s+= "," %>
<% end %>
<% s = s[0..s.length-2] %>
<% s+= "];" %>
<%= s %>

	(function( $ ) {

		$.fn.biddingOperator = function() {
			return this.each(function () {
				$(this).click(function() {
					if (currentSelectCo != null) {
						$("#co_text_"+currentSelectCo).fadeOut('slow', function () { } ).css("display","none")
					}
					var coNum = $(this).attr("id");
					coNum = coNum.slice(coNum.indexOf("_")+1);
					var coCase = coStatus[coNum].slice(0,3);
					var minCost = coStatus[coNum].slice(4);
					minCost = parseInt(minCost);

					if (currentPlayer) {
						switch (coCase) {
							case 'BID':
								if (minCost <= cashHeld) {
									// enough cash to bid on
									$("#bid_buy_text").html("");
									$("#bid_button").css("display","inline");
									$("#buy_button").css("display","none");
								} else {
									// insufficient cash to bid on
									$.bidbuyOff("Insufficient *");								
								}
								break;
							case 'BUY':
								if (minCost <= cashHeld) {
									$("#bid_buy_text").html("");									
									$("#buy_button").css("display","inline");
									$("#bid_button").css("display","none");
								} else {
									$.bidbuyOff("Insufficient *");
								}
								break;
							case 'BOT':
								$.bidbuyOff("Bought");
								break;
							case 'NOB':
								if (minCost <= cashHeld) {
									// enough cash to bid on
									$("#bid_buy_text").html("");
									$("#bid_button").css("display","inline");
									$("#buy_button").css("display","none");
								} else {
									// insufficient cash to bid on
									$.bidbuyOff("Insufficient *");								
								}					
								break;
						}
					}
					
					currentSelectCo = coNum;
					$("#co_text_"+currentSelectCo).fadeIn('slow', function () { }).css("display", "block");
					
				});
			});
		};
	})(jQuery);
	
	(function ( $ ) {
	
		$.fn.highLightCoNumbers = function() {
			return this.each(function () {
				$(this).mouseover(function () {
					$(this).css({"box-shadow":"0px 0px 3px 5px #f3e852", "background-color":"#334c84", "color":"#f3e852"});
				}).mouseleave(function() {
					$(this).css({"box-shadow":"2px 2px 3px black", "background-color":"#c4c4c4","color":"black"});
				});
			});
		};
	
	})(jQuery);	

	jQuery.bidbuyOff = function (msg) {
		$("#buy_button").css("display","none");
		$("#bid_button").css("display","none");
		$("#bid_buy_text").html(msg);
	}
	
	jQuery.buyCo = function () {
		var buyAmount = parseInt(coStatus[currentSelectCo].slice(4));
		var confirmText = "Are you sure you want to purchase "+$("#co_title_name_"+currentSelectCo).text()+" for *"+buyAmount+"?";
		confirmText += "\n\nYou will have *"+(cashHeld-buyAmount)+" left if you proceed."
		var confirmResponse = confirm(confirmText)
		if (confirmResponse) {
			cashHeld -= buyAmount;
			$("#buy_co_num").val(currentSelectCo);
			$("#buy_amount").val(buyAmount);
			$("#buy_form").submit();
		} 
	}
	
	jQuery.coBought = function(eventText, coNum, cost, playerNum) {
		$(".event_wrapper").append("<div class='event_info'>"+eventText+"</div>");
		var oldCash = parseInt($("#player_cash_"+playerNum).text().slice(1));
		$("#player_cash_"+playerNum).html("*"+(oldCash-cost));
		coStatus[coNum] = "BOT";
		var valueString = "co_number="+coNum+"&player_num="+playerNum;
		$("#co_"+coNum).remove(".flag_wrapper");
		//request bought flag from server via $.get
	   $.ajax({
    	  type : 'GET',
    	  url : '/game/bought_flag',
    	  data : valueString,
   		  dataType : 'script'
   		});
	}
	
	jQuery.requestInitBidUpdate = function () {

		$.get('/game/update',
			{ last_event_num : lastEventNum },
			function(data) {
				//do stuff when receive back in JSON
				interval=window.clearInterval(interval); // pause the request to handle updates.
				$.each(data, function(x, events) {
					$.each(events, function(y, event) {
						switch(event.code) {
							case 'INITBID_BUY':
								$.coBought(event.text, parseInt(event.regarding), parseInt(event.value), parseInt(event.value2));
								break;
							case 'INITBID_BID':
								//$.logout(event.value, event.text);
								break;
							case 'INITBID_PASS':
								//$.no_updates(event.text);
								break;
							case 'INITBID_NEW_PLAYER':
								//$.redirect(event.text);
								break;
						}  // end of switch
					});
				});
				
				lastEventNum = data[data.length-1].event.id;
				//$.setRequestTimer();
			}, "json"
		);
	};	
	
	jQuery.setRequestTimer = function () {
		interval = setInterval(function () {
			$.requestInitBidUpdate();
		}, ping_time);
	}
	
	$(document).ready(function() {
		$(".init_bidding_co_number").biddingOperator();
		$(".init_bidding_co_number").highLightCoNumbers();
		lastEventNum = <%= @last_event_num %>;
	});
	
</script>

<div class="main_wrapper">

	<div class="init_bidding_title">Initial Bidding Round for Private & Indepedent Companies</div>
	
	<div class="upper_wrapper">
		<div class="init_bidding_co_title" style="padding-left: 10px; text-align: left;">
			Private Companies
		</div>		

		<div class="top_line_button_box">
			<div id="bid_buy_text"></div>
			<input type="button" id="bid_button" value="Bid" class="init_bidding_button" >
			<input type="button" id="buy_button" value="Buy" class="init_bidding_button" onClick="$.buyCo()">
		</div>	

		<div class="init_bidding_co_title" style="padding-right: 10px;  text-align: right;">
			Independent Companies
		</div>
	</div>
	
	<div class="middle_wrapper">
		<div class="init_bidding_co_number_wrapper">
		<% privs = Array.new %>
		<% @companies.each { |co| privs << co unless co.class.to_s != "PrivateCompany" } %>
		<% body_buy_found = false %>	
		<% privs.each do |co| %>
			<div id="co_<%= co.number %>" class="init_bidding_co_number"><%= co.number %>
			<% if (co.status == "BOUGHT") %>
	 			<%= render :partial=>'game/bought_flag_left', :locals => { :co=>co } %>
			<% elsif (!co.bids.empty?) %>
			 	<%= render :partial=>'game/bid_flag_left', :locals => { :co=>co } %>
			<% elsif (!body_buy_found) %>
	 			<%= render :partial=>'game/buy_flag_left', :locals => { :co=>co } %>
				<% body_buy_found = true %>		
			<% end %>
			</div>	
		<% end %>	
		</div>
		
		<div class="init_bidding_inner_info">
			<% @companies.each do |company| %>

				<%= render :partial=>'game/init_companies', :locals => { :company=>company } %>
			
			<% end %>
		</div>
		
		<div class="init_bidding_co_number_wrapper">
		<% inds = Array.new %>
		<% @companies.each { |co| inds << co unless co.class.to_s != "IndependentCompany" } %>	
		<% inds.each do |co| %>
			<div id="co_<%= co.number %>" class="init_bidding_co_number"><%= co.number %>
			<% if (co.status == "BOUGHT") %>
	 			<%= render :partial=>'game/bought_flag_right', :locals => { :co=>co } %>
			<% elsif (!co.bids.empty?) %>
			 	<%= render :partial=>'game/bid_flag_right', :locals => { :co=>co } %>
			<% elsif (!body_buy_found) %>
	 			<%= render :partial=>'game/buy_flag_right', :locals => { :co=>co } %>
				<% body_buy_found = true %>		
			<% end %>
			</div>	
		<% end %>
		</div>
	</div>
	
	<div class="bottom_line_wrapper">
		<div class="bottom_line_title" style="padding-left: 10px; text-align: left;">
			Player Information	
		</div>
		
		<div class="bottom_line_pass_box">
			<input type="button" <%= @player == @game.first_player ? "style='display:inline;'" : "" %> id="pass_button" value="Pass" class="init_bidding_button">
		</div>

		<div class="bottom_line_title" style="padding-right: 10px; text-align: right;">
			Events Log	
		</div>
	</div>
	
	<div class="bottom_wrapper">
		<div class="player_info_wrapper">
			<table class="player_info">
				<% @game.players.each do |player| %>
			
					<%= render :partial=>'game/init_players', :locals => { :player=>player, :first_player=>@game.first_player } %>	
				<% end %>
			</table>
		</div>
		
		<div class="event_wrapper">
			<div class="event_info">testing..."</div>
		</div>
	</div>
</div>

<!-- start of forms to control bid / buy / pass functions -->

<%= form_for(:buy, :url=> game_buy_path, :html=> { :id =>"buy_form" }, :remote=>true ) do |f| %>
	<%= f.hidden_field :co_num, :value => "-1" %>
	<%= f.hidden_field :amount, :value => "-1" %>
	<%= f.hidden_field :id, :value => @player.id %>
<% end %>


